// Generated by gencpp from file dector/PointServer.msg
// DO NOT EDIT!


#ifndef DECTOR_MESSAGE_POINTSERVER_H
#define DECTOR_MESSAGE_POINTSERVER_H

#include <ros/service_traits.h>


#include "PointServerRequest.h"
#include "PointServerResponse.h"


namespace dector
{

struct PointServer
{

typedef PointServerRequest Request;
typedef PointServerResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct PointServer
} // namespace dector


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::dector::PointServer > {
  static const char* value()
  {
    return "86b6248120117e624c8cdd25f0686497";
  }

  static const char* value(const ::dector::PointServer&) { return value(); }
};

template<>
struct DataType< ::dector::PointServer > {
  static const char* value()
  {
    return "dector/PointServer";
  }

  static const char* value(const ::dector::PointServer&) { return value(); }
};


// service_traits::MD5Sum< ::dector::PointServerRequest> should match 
// service_traits::MD5Sum< ::dector::PointServer > 
template<>
struct MD5Sum< ::dector::PointServerRequest>
{
  static const char* value()
  {
    return MD5Sum< ::dector::PointServer >::value();
  }
  static const char* value(const ::dector::PointServerRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::dector::PointServerRequest> should match 
// service_traits::DataType< ::dector::PointServer > 
template<>
struct DataType< ::dector::PointServerRequest>
{
  static const char* value()
  {
    return DataType< ::dector::PointServer >::value();
  }
  static const char* value(const ::dector::PointServerRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::dector::PointServerResponse> should match 
// service_traits::MD5Sum< ::dector::PointServer > 
template<>
struct MD5Sum< ::dector::PointServerResponse>
{
  static const char* value()
  {
    return MD5Sum< ::dector::PointServer >::value();
  }
  static const char* value(const ::dector::PointServerResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::dector::PointServerResponse> should match 
// service_traits::DataType< ::dector::PointServer > 
template<>
struct DataType< ::dector::PointServerResponse>
{
  static const char* value()
  {
    return DataType< ::dector::PointServer >::value();
  }
  static const char* value(const ::dector::PointServerResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // DECTOR_MESSAGE_POINTSERVER_H
